C51 COMPILER V9.60.0.0   ISR                                                               11/27/2019 20:10:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN isr.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE isr.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE SYMBOLS TABS(2)

line level    source

   1          //=============================================================================
   2          // Name   :isr.c
   3          // Purpose  :Interrupt Service Routines
   4          //=============================================================================
   5          #define __isr_c
   6          
   7          #include "includeAll.h"
   8          //=============================================================================
   9          // Function:  void INT0_int(void)
  10          // Purpose: INT0 pin interrupt vector
  11          // Input: none
  12          // OutPut:  none
  13          // Author:
  14          //=============================================================================
  15          void INT0_int(void) interrupt 0 {
  16   1        IE0 = 0; // clear interrupt flag
  17   1      }
  18          //=============================================================================
  19          // Function:  void TIMER0_int(void)
  20          // Purpose: TIMER0 interrupt vector
  21          // Input: none
  22          // OutPut:  none
  23          // Author:
  24          //=============================================================================
  25          void TIMER0_int(void) interrupt 1 {
  26   1        TF0 = 0; // clear interrupt flag
  27   1        //------------
  28   1      }
  29          //=============================================================================
  30          // Function:  void INT1_int(void)
  31          // Purpose: INT1 pin interrupt vector
  32          // Input: none
  33          // OutPut:  none
  34          // Author:
  35          //=============================================================================
  36          void INT1_int(void) interrupt 2 {
  37   1        IE1 = 0; // clear interrupt flag
  38   1      }
  39          //=============================================================================
  40          // Function:  void TIMER1_int(void)
  41          // Purpose: TIMER1 interrupt vector
  42          // Input: none
  43          // OutPut:  none
  44          // Author:
  45          //=============================================================================
  46          void TIMER1_int(void) interrupt 3 {
  47   1        TF1 = 0; // clear interrupt flag
  48   1      }
  49          //=============================================================================
  50          // Function:  void UART_int(void)
  51          // Purpose: UART interrupt vector
  52          // Input: none
  53          // OutPut:  none
  54          // Author:
  55          //=============================================================================
C51 COMPILER V9.60.0.0   ISR                                                               11/27/2019 20:10:25 PAGE 2   

  56          void UART_int(void) interrupt 4 {
  57   1        TI = 0; // clear interrupt flag
  58   1        RI = 0; // clear interrupt flag
  59   1      }
  60          //=============================================================================
  61          // Function:  void TIMER2_int(void)
  62          // Purpose: TIMER2 interrupt vector
  63          // Input: none
  64          // OutPut:  none
  65          // Author:
  66          //=============================================================================
  67          void TIMER2_int(void) interrupt 5 {
  68   1        TF2 = 0; // clear interrupt flag
  69   1        b1ms = 1;
  70   1        vData++;
  71   1        if (vData == 0xff) {
  72   2          vData = 0;
  73   2        }
  74   1      }
  75          //=============================================================================
  76          // Function:  void TIMER3_int(void)
  77          // Purpose: TIMER3 interrupt vector
  78          // Input: none
  79          // OutPut:  none
  80          // Author:
  81          //=============================================================================
  82          void TIMER3_int(void) interrupt 7 { INTFLAG &= ~TF3; }
  83          //=============================================================================
  84          // Function:  void P1_int(void)
  85          // Purpose: P1 pin interrupt vector
  86          // Input: none
  87          // OutPut:  none
  88          // Author:
  89          //=============================================================================
  90          void P1_int(void) interrupt 8 { INTFLAG &= ~P1IF; }
  91          //=============================================================================
  92          // Function:  void INT2_int(void)
  93          // Purpose: INT2 pin interrupt vector
  94          // Input: none
  95          // OutPut:  none
  96          // Author:
  97          //=============================================================================
  98          void INT2_int(void) interrupt 9 { INTFLAG &= ~IE2; }
  99          //=============================================================================
 100          // Function:  void ADC_TK_int(void)
 101          // Purpose: ADC&TOUCHKEY interrupt vector
 102          // Input: none
 103          // OutPut:  none
 104          // Author:
 105          //=============================================================================
 106          void ADC_TK_int(void) interrupt 10 {
 107   1        INTFLAG &= ~ADIF;
 108   1        INTFLAG &= ~TKIF;
 109   1        TKCON2 &= ~TKAUTO; // disable touch key auto scan
 110   1      }
C51 COMPILER V9.60.0.0   ISR                                                               11/27/2019 20:10:25 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION INT0_int (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
0000 C289              CLR     IE0
                                           ; SOURCE LINE # 17
0002 32                RETI    
             ; FUNCTION INT0_int (END)

             ; FUNCTION TIMER0_int (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 C28D              CLR     TF0
                                           ; SOURCE LINE # 28
0002 32                RETI    
             ; FUNCTION TIMER0_int (END)

             ; FUNCTION INT1_int (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0000 C28B              CLR     IE1
                                           ; SOURCE LINE # 38
0002 32                RETI    
             ; FUNCTION INT1_int (END)

             ; FUNCTION TIMER1_int (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
0000 C28F              CLR     TF1
                                           ; SOURCE LINE # 48
0002 32                RETI    
             ; FUNCTION TIMER1_int (END)

             ; FUNCTION UART_int (BEGIN)
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0000 C299              CLR     TI
                                           ; SOURCE LINE # 58
0002 C298              CLR     RI
                                           ; SOURCE LINE # 59
0004 32                RETI    
             ; FUNCTION UART_int (END)

             ; FUNCTION TIMER2_int (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C007              PUSH    AR7
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0009 C2CF              CLR     TF2
                                           ; SOURCE LINE # 69
000B D200        R     SETB    b1ms
                                           ; SOURCE LINE # 70
000D 0500        R     INC     vData
                                           ; SOURCE LINE # 71
000F AF00        R     MOV     R7,vData
0011 EF                MOV     A,R7
0012 F4                CPL     A
0013 7002              JNZ     ?C0007
C51 COMPILER V9.60.0.0   ISR                                                               11/27/2019 20:10:25 PAGE 4   

                                           ; SOURCE LINE # 72
0015 F500        R     MOV     vData,A
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0017         ?C0007:
0017 D007              POP     AR7
0019 D0D0              POP     PSW
001B D0E0              POP     ACC
001D 32                RETI    
             ; FUNCTION TIMER2_int (END)

             ; FUNCTION TIMER3_int (BEGIN)
                                           ; SOURCE LINE # 82
0000 5395FE            ANL     INTFLAG,#0FEH
0003 32                RETI    
             ; FUNCTION TIMER3_int (END)

             ; FUNCTION P1_int (BEGIN)
                                           ; SOURCE LINE # 90
0000 5395FD            ANL     INTFLAG,#0FDH
0003 32                RETI    
             ; FUNCTION P1_int (END)

             ; FUNCTION INT2_int (BEGIN)
                                           ; SOURCE LINE # 98
0000 5395FB            ANL     INTFLAG,#0FBH
0003 32                RETI    
             ; FUNCTION INT2_int (END)

             ; FUNCTION ADC_TK_int (BEGIN)
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
0000 5395EF            ANL     INTFLAG,#0EFH
                                           ; SOURCE LINE # 108
0003 5395DF            ANL     INTFLAG,#0DFH
                                           ; SOURCE LINE # 109
0006 53AFF7            ANL     TKCON2,#0F7H
                                           ; SOURCE LINE # 110
0009 32                RETI    
             ; FUNCTION ADC_TK_int (END)

C51 COMPILER V9.60.0.0   ISR                                                               11/27/2019 20:10:25 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
INTFLAG. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
AUX1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
P1_int . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TKCON2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
CLKCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
INT0_int . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
INT1_int . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
INT2_int . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
TIMER0_int . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TIMER1_int . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TIMER2_int . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TIMER3_int . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
gData. . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
UART_int . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
vData. . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
b1ms . . . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
ADC_TK_int . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
